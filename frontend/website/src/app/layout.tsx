import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { CookiesProvider } from 'next-client-cookies/server';
import NextTopLoader from 'nextjs-toploader';
import { AuthProvider } from "./auth/_context/AuthContext";
import { UserInterface } from "./_interface/models/UserInterface";
import { cookies } from "next/headers";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  let authData

  const accessToken = cookies().get("accessToken")

  try {
    const fetchRes = await fetch('http://localhost:5000/api/client/@me', {
      method: 'GET',
      headers: {
        Authorization: `Bearer ${accessToken?.value}`,
        'Content-Type': 'application/json'
      },
    })

    if (!fetchRes.ok) {
      authData = {
        isAuthenticated: false,
        user: null
      }
    } else {
      const fetchResOutput: { user: UserInterface } = await fetchRes.json()

      authData = {
        isAuthenticated: true,
        user: fetchResOutput.user
      }
    }
  } catch (error) {
    authData = {
      isAuthenticated: false,
      user: null
    }
  }

  return (
    <html lang="en">
      <AuthProvider initData={authData}>
        <body className={inter.className}>
          <NextTopLoader />
          {children}
        </body>
      </AuthProvider>
    </html>
  );
}
